#+title: Rngstream random number generators for C#
#+author: Mark Clements
#+options: toc:nil html-postamble:nil

* Introduction

** RngStreams

RngStreams is an object-oriented random-number package with many long streams and substreams,
based on the MRG32k3a RNG from reference [fn:1] below and proposed in [fn:2].

It has implementations in C, C++, Java, R, and some other languages.
The main description and documentation is in the c++ directory, in the paper streams.pdf.
Directories c and java gives a short description of the interfaces in C and Java, respectively.

The package is copyrighted by Pierre L'Ã‰cuyer and the University of Montreal.
It can be used freely for any purpose.

E-mail:   [[mailto:lecuyer@iro.umontreal.ca]]

http://www.iro.umontreal.ca/~lecuyer/

If you use it for your research, please cite the relevant publications in which MRG32k3a
and the package with multiple streams were proposed.

* Example

#+BEGIN_SRC elisp :exports none
;;; ob-csharp.el --- org-babel functions for csharp evaluation

;; Copyright (C) 2011-2015 Free Software Foundation, Inc.

;; Original Author: Eric Schulte (ob-java.el) 
;; Author: thomas "at" friendlyvillagers.com 
;; Keywords: literate programming, reproducible research
;; Homepage: http://orgmode.org

;; LOCAL CHANGES: default to "mcs"; add :otherfiles argument for compiling
;; Mark Clements 2021-10-15

;; This file is NOT YET part of GNU Emacs.

;; GNU Emacs is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; GNU Emacs is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.

;;; Commentary:

;; Currently this only supports the external compilation and execution
;; of csharp code blocks (i.e., no session support).

;;; Code:
(require 'ob)

(defvar org-babel-tangle-lang-exts)
(add-to-list 'org-babel-tangle-lang-exts '("csharp" . "cs"))

(defcustom org-babel-csharp-command "mono"
  "Name of the csharp command.
May be either a command in the path, like mono
or an absolute path name, like /usr/local/bin/mono
parameters may be used, like mono -verbose"
  :group 'org-babel
  :version "24.3"
  :type 'string)

(defcustom org-babel-csharp-compiler "mcs"
  "Name of the csharp compiler.
May be either a command in the path, like mcs
or an absolute path name, like /usr/local/bin/mcs
parameters may be used, like mcs -warnaserror+"
  :group 'org-babel
  :version "24.3"
  :type 'string) 

(defun org-babel-execute:csharp (body params)
  (let* ((full-body (org-babel-expand-body:generic body params))
         (cmpflag (or (cdr (assoc :cmpflag params)) ""))
         (cmdline (or (cdr (assoc :cmdline params)) ""))
         (otherfiles (or (cdr (assoc :otherfiles params)) ""))
         (src-file (org-babel-temp-file "csharp-src-" ".cs"))
         (exe-file (concat (file-name-sans-extension src-file)  ".exe"))
         (compile 
          (progn (with-temp-file  src-file (insert full-body))
                 (org-babel-eval 
                  (concat org-babel-csharp-compiler " " cmpflag " "  src-file " " otherfiles) ""))))
    (let ((results (org-babel-eval (concat org-babel-csharp-command " " cmdline " " exe-file) "")))
      (org-babel-reassemble-table
       (org-babel-result-cond (cdr (assoc :result-params params))
         (org-babel-read results)
         (let ((tmp-file (org-babel-temp-file "c-")))
           (with-temp-file tmp-file (insert results))
           (org-babel-import-elisp-from-file tmp-file)))
       (org-babel-pick-name
        (cdr (assoc :colname-names params)) (cdr (assoc :colnames params)))
       (org-babel-pick-name
        (cdr (assoc :rowname-names params)) (cdr (assoc :rownames params)))))))

(defun org-babel-prep-session:csharp (session params)
  "Return an error because csharp does not support sessions."
  (error "Sessions are not (yet) supported for CSharp"))

(provide 'ob-csharp)
;;; ob-csharp.el ends here
#+END_SRC

#+BEGIN_SRC csharp :results verbatim :otherfiles RngStream.cs :exports both
  using System;
  class HelloWorld {
      public static void Main()
      {
	  RngStream rng = new RngStream(12345);
	  Console.WriteLine(rng.NextDouble()+" "+rng.NextDouble());
	  rng.ResetNextSubstream();
	  Console.WriteLine(rng.NextDouble()+" "+rng.NextDouble());
	  rng.ResetNextStream();
	  Console.WriteLine(rng.NextDouble()+" "+rng.NextDouble());
      }
  }
#+END_SRC

#+RESULTS:
: 0.0724408950348632 0.769887841571279
: 0.698103786494021 0.186421477183622
: 0.485965335294788 0.15088750221408

#+BEGIN_SRC R :results output :exports both
  library(parallel)
  RNGkind("L'Ecuyer-CMRG")
  set.seed(12345)
  Ig <- Bg <- .Random.seed
  print(runif(2))
  .Random.seed <- Bg <- nextRNGSubStream(Bg)
  print(runif(2))
  .Random.seed <- Ig <- Bg <- nextRNGStream(Ig)
  print(runif(2))
#+END_SRC

#+RESULTS:
: [1] 0.0724409 0.7698878
: [1] 0.6981038 0.1864215
: [1] 0.4859653 0.1508875


[fn:1] P. L'Ecuyer, "Good Parameter Sets for Combined Multiple Recursive Random Number Generators",
Operations Research, 47, 1 (1999), 159--164.

[fn:2] P. L'Ecuyer, R. Simard, E. J. Chen, and W. D. Kelton,
"An Objected-Oriented Random-Number Package with Many Long Streams and Substreams",
Operations Research, 50, 6 (2002), 1073--1075

